// Code generated by MockGen. DO NOT EDIT.
// Source: timer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTimerInterface is a mock of TimerInterface interface.
type MockTimerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTimerInterfaceMockRecorder
}

// MockTimerInterfaceMockRecorder is the mock recorder for MockTimerInterface.
type MockTimerInterfaceMockRecorder struct {
	mock *MockTimerInterface
}

// NewMockTimerInterface creates a new mock instance.
func NewMockTimerInterface(ctrl *gomock.Controller) *MockTimerInterface {
	mock := &MockTimerInterface{ctrl: ctrl}
	mock.recorder = &MockTimerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimerInterface) EXPECT() *MockTimerInterfaceMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *MockTimerInterface) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *MockTimerInterfaceMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockTimerInterface)(nil).Now))
}
